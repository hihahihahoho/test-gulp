$map-box-width: (
  auto: auto,
  full: 100%,
  xs: 80px,
  sm: 100px,
  md: 120px,
  lg: 140px,
  xl: 200px,
) !default;
$map-box-height: (
  default: (
    min-height: 44px,
    icon-size: 24px,
    font-size: 14px,
    padding: 4px 12px,
    border-radius: 8px,
    space: 8px,
  ),
  xs1: (
    min-height: 18px,
    icon-size: 16px,
    font-size: 12px,
    padding: 4px 8px,
    border-radius: 4px,
    space: 4px,
  ),
  xs: (
    min-height: 24px,
    icon-size: 16px,
    font-size: 12px,
    padding: 2px 8px,
    border-radius: 4px,
    space: 4px,
  ),
  sm: (
    min-height: 32px,
    font-size: 14px,
    icon-size: 20px,
    padding: 4px 8px,
    border-radius: 4px,
    space: 4px,
  ),
  md: (
    min-height: 36px,
    font-size: 14px,
    icon-size: 20px,
    padding: 4px 8px,
    border-radius: 4px,
    space: 4px,
  ),
  lg: (
    min-height: 40px,
    font-size: 14px,
    icon-size: 20px,
    padding: 4px 8px,
    border-radius: 8px,
    space: 8px,
  ),
  xl: (
    min-height: 44px,
    font-size: 14px,
    icon-size: 24px,
    padding: 4px 8px,
    border-radius: 8px,
    space: 8px,
  ),
  xl1: (
    min-height: 48px,
    font-size: 16px,
    icon-size: 24px,
    padding: 4px 8px,
    border-radius: 8px,
    space: 8px,
  ),
  xl2: (
    min-height: 56px,
    font-size: 16px,
    icon-size: 24px,
    padding: 4px 8px,
    border-radius: 8px,
    space: 8px,
  ),
) !default;

@mixin modifiers-btn-prop($map, $prefix: ".ubox-size-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{$prefix}#{$key} {
      @if type-of($value) == "map" {
        @each $key2, $value2 in $value {
          @if $key2 == "space" {
            .ubox-text:not(:only-child):last-child {
              padding-left: $value2;
              padding-right: $value2/2;
            }
            .ubox-text:not(:only-child):first-child {
              padding-right: $value2;
              padding-left: $value2/2;
            }
            .ubox-text:not(:only-child):not(:first-child):not(:last-child) {
              padding-left: $value2;
              padding-right: $value2;
            }
          }
        }
      }
    }
  }
}

@mixin modifiers-box-height($map, $attribute, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @each $key2, $value2 in $value {
          #{$key2}: $value2;
          @if $key2 == "min-height" {
            &.no-min-height {
              height: $value2;
            }
            min-width: $value2;
            &.ubox-square {
              width: $value2;
            }
            &.ubox-rounded {
              border-radius: $value2/2;
              > .uicon-image {
                border-radius: $value2/2;
              }
            }
            &.icm {
              width: $value2;
              height: $value2;
              -webkit-mask-size: $value2;
              mask-size: $value2;
            }
          }

          @if $key2 == "font-size" {
            .ubox-inner {
              #{$key2}: $value2;
            }
          }

          @if $key2 == "border-radius" {
            > .uicon-image {
              border-radius: $value2;
            }
          }

          @if $key2 == "icon-size" {
            .icm,
            img {
              width: $value2;
              height: $value2;
              -webkit-mask-size: $value2;
              mask-size: $value2;
            }
          }
        }
      } @else {
        #{$attribute}: $value;
        @if $key == "height" {
          min-width: $value;
        }
        &.ubox-rounded {
          border-radius: $value/2;
        }
        &.ubox-square {
          width: $value;
        }
      }
    }
  }
}

.ubox {
  display: flex;
  align-items: center;
  @include modifiers-btn-prop($map-box-height);
  &-square {
    padding: 0 !important;
  }
  &-size {
    @include modifiers-box-height($map-box-height, "height");
  }
  &-min-width {
    @include modifiers($map-box-width, "min-width");
  }
}

.row {
  .ubox-text {
    min-height: 100%;
  }
}

.bg-img-cover {
  background-position: center;
  background-size: cover;
  & > img {
    object-fit: cover;
    width: 100%;
    height: 100%;
    max-width: none;
  }
}
