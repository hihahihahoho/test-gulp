@mixin modifiers-input-linebar-ic($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key},
      '') } {
      @if type-of($value) == "map" {
        @include modifiers-input-linebar-ic($value, $separator);
      } @else {
        &-label {
          &::after {
            max-height: $value;
          }
        }
        input.input {
          line-height: $value;
        }
        .input,
        .input-box {
          height: $value;
        }
        .textarea-autosize,
        textarea {
          padding-top: ($value - $input-font-size)/2;
          padding-bottom: ($value - $input-font-size)/2;
        }
        & .select2-container .selection,
        & .tagify {
          min-height: $value;
        }
      }
    }
  }
}

input,
textarea,
select {
  color: $input-color;
  font-weight: $input-font-weight;
  font-size: $input-font-size;
  @include media("<992px") {
    font-size: $input-font-size-mobile !important;
  }
}

input,
textarea {
  &::placeholder {
    color: $input-placeholder-color;
  }
}
textarea:not(.textarea-autosize) {
  height: auto !important;
}
select:invalid {
  color: $input-placeholder-color;
}

.textarea {
  &-group {
    &.input-group-wrap {
      align-items: flex-start;
    }
    > .input-extend-outside {
      margin-top: calc(#{$fz-default-line-height}em + #{$input-label-margin-bottom});
    }
  }
  &-autosize {
    max-height: 200px;
    transition: none !important;
    &:not(.input-hadval) {
      line-height: 1;
    }
    &::first-line {
      font-family: inherit;
      line-height: 1;
      font-size: inherit;
      font-weight: inherit;
    }
  }
}

.input {
  padding-left: $input-space-left;
  padding-right: $input-space-right;
  width: 100%;
  border-radius: $input-border-radius;
  border: 0;
  background-color: transparent;
  order: 2;
  &:hover:not(readonly):not(:focus):not(:disabled),
  &:not(readonly):not(:focus):not(:disabled) ~ .select2:hover {
    & ~ .input-frame {
      border-color: $input-hover-frame-border-color;
    }
  }
  &-has-clear {
    &:focus {
      padding-right: 36px;
    }
  }
  &-note {
    margin-top: 4px;
    font-size: 12px;
  }
  &-frame {
    pointer-events: none;
    position: relative;
    transition: 0.2s all ease-in-out;
    background-color: $input-background;
    z-index: 1;
  }
  &:not(textarea) {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  &::-ms-clear {
    display: none;
  }
  &:focus {
    ~ .input-extend .input-ic-clear.show {
      display: flex !important;
    }
  }
  &-box {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    width: 100%;
    > * {
      min-width: 100%;
    }
  }
  &-ic {
    display: flex;
    align-items: center;
    justify-content: center;
    &-clear {
      position: absolute;
      right: 100%;
      width: 36px;
      display: none !important;
      height: 24px;
      background-image: url("../media/icons-color/default/default/close.svg");
      background-position: center right 12px;
      background-size: 16px;
      cursor: pointer;
      background-repeat: no-repeat;
    }
  }
  &-extend {
    display: flex;
    position: relative;
    z-index: 2;
    &-outside {
      &.input-extend-left {
        order: 0;
        padding-left: 0;
        padding-right: $input-space-left;
      }
      &.input-extend-right {
        padding-left: $input-space-left;
        padding-right: 0;
      }
    }
    &-left {
      .input-box {
        padding-left: $input-space-left;
      }
    }
    &-right {
      order: 3;
      .input-box {
        padding-right: $input-space-right;
      }
    }
  }
  &-size {
    @include modifiers-input-linebar-ic($map-input-size);
  }
  &-group {
    order: 2;
    position: relative;
    display: flex;
    flex-grow: 1;
    flex-basis: 0;
    cursor: text;
    &-horizontal {
      .input-extend-outside {
        margin-top: 0 !important;
      }
    }
  }
  &-group-wrap {
    display: flex;
    align-items: flex-end;
  }
  &-label {
    font-size: $input-label-font-size;
    font-weight: $input-label-font-weight;
    color: $input-label-color;
    .inner {
      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);
      margin-bottom: $input-label-margin-bottom;
    }
    &-horizontal {
      height: 100%;
      display: block;
      font-size: 0;
      &::after {
        content: "";
        height: 100%;
        display: inline-block;
        vertical-align: middle;
      }
      .inner {
        display: inline-block;
        vertical-align: middle;
        margin-bottom: 0;
        font-size: $input-label-font-size;
      }
    }
  }
  &-inner-wrap {
    display: flex;
    position: relative;
    width: 100%;
    order: 1;
    flex-grow: 1;
    flex-basis: 0;
    > *:not(.input-frame) {
      z-index: 2;
      position: relative;
    }
  }
}

select.input {
  padding-right: 44px;
}
select.input,
.select2-container {
  background-image: url(../media/icons-color/default/default/chevron-down.svg);
  background-position: center right $input-space-right;
  background-repeat: no-repeat;
}
.select2-container {
  display: flex;
  flex-grow: 1;
  flex-basis: 0;
  text-overflow: ellipsis;
  .selection {
    display: flex;
    align-items: center;
    width: 100%;
  }
  .select2-selection--single {
    height: 100% !important;
    display: flex;
    overflow: hidden;
    align-items: center;
    background-color: $input-border-background;
    width: 100%;
    .select2-selection__rendered {
      width: 100%;
      display: block;
      align-items: center;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      padding-right: $input-ic-box-width + $input-space-right;
    }
  }
  .select2-selection--multiple {
    width: 100%;
    height: auto !important;
  }
}

.input-inner-wrap {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: auto auto minmax(0, 1fr) auto auto;
  grid-template-columns: auto auto minmax(0, 1fr) auto auto;
}

.input-frame {
  -ms-grid-column-span: 5;
  grid-column: 2 / 5;
  -ms-grid-row: 2;
  grid-row: 2;
}

.input,
.select2 {
  -ms-grid-column: 3;
  grid-column: 3;
  -ms-grid-row: 2;
  grid-row: 2;
}

.input-extend-outside {
  .input-box {
    &:first-child {
      padding-left: 0 !important;
    }
    &:last-child {
      padding-right: 0 !important;
    }
  }
  &.input-extend-right {
    -ms-grid-column: 5;
    grid-column: 5;
    -ms-grid-row: 2;
    grid-row: 2;
  }
  &.input-extend-left {
    -ms-grid-column: 1;
    grid-column: 1;
    -ms-grid-row: 2;
    grid-row: 2;
  }
}

.input-extend-left {
  -ms-grid-column: 2;
  grid-column: 2;
  -ms-grid-row: 2;
  grid-row: 2;
}

.input-extend-right {
  -ms-grid-column: 4;
  grid-column: 4;
  -ms-grid-row: 2;
  grid-row: 2;
}

.select-tpl-txt {
  text-overflow: ellipsis;
  overflow: hidden;
}

.datepicker {
  &-single {
    background-repeat: no-repeat;
    padding-right: $input-ic-box-width + $input-space-left;
    background-position: center right $input-space-right;
    background-image: url("../media/icons-color/default/default/calendar.svg");
  }
  &-range {
    background-repeat: no-repeat;
    padding-right: $input-ic-box-width + $input-space-left;
    background-position: center right $input-space-right;
    background-image: url("../media/icons-color/default/default/calendar.svg");
  }
}

.errorBlock {
  color: $color-danger;
  font-size: 12px;
  > * {
    margin-bottom: 0;
  }
  > *:not(:empty) {
    margin-top: 4px;
  }
}

.tagify {
  height: auto !important;
}

.select-2[readonly] ~ .select2,
select[readonly] {
  pointer-events: none;
  .select2-selection__rendered  > *{
    user-select: all;
  }
}
