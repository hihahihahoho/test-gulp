@mixin newmodifiers-input-linebar-ic($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key},
      '') } {
      @if type-of($value) == "map" {
        @include newmodifiers-input-linebar-ic($value, $separator);
      } @else {
        .newinput,
        .newinput-extend-outside {
          height: $value;
        }
        .newinput-group {
          min-height: $value;
        }
      }
    }
  }
}

.newinput {
  flex-grow: 1;
  flex-basis: 0;
  width: 100%;
  border-radius: $newinput-border-radius;
  order: 3;
  border: 0;
  background-color: transparent;
  order: 2;
  text-overflow: ellipsis;
  white-space: nowrap;
  text-overflow: hidden;
  &-ic {
    display: flex;
    align-items: center;
    justify-content: center;
    &-clear {
      width: 24px;
      height: 24px;
      background-image: url("../media/icons-color/default/default/close.svg");
      background-position: center;
      background-repeat: no-repeat;
    }
  }
  &-extend {
    display: flex;
    align-items: center;
    &-outside {
      &.newinput-extend-left {
        order: 0;
        padding-left: 0;
        padding-right: $newinput-space-left;
      }
      &.newinput-extend-right {
        padding-left: $newinput-space-left;
        padding-right: 0;
      }
    }
    &-left {
      padding-left: $newinput-space-left;
      .newinput-box {
        &:not(:first-child) {
          padding-left: $newinput-space-left/2;
        }
      }
    }
    &-right {
      order: 2;
      padding-right: $newinput-space-right;
      .newinput-box {
        &:not(:last-child) {
          padding-right: $newinput-space-right/2;
        }
      }
    }
  }
  &-box {
    display: flex;
    flex-wrap: nowrap;
  }
  &-content {
    position: relative;
    display: flex;
  }
  &-size {
    @include newmodifiers-input-linebar-ic($map-input-size);
  }
  &-group {
    order: 2;
    position: relative;
    display: flex;
    flex-grow: 1;
    flex-basis: 0;
    cursor: text;
  }
  &-group-wrap {
    display: flex;
    align-items: flex-end;
  }
  &-label {
    font-size: $input-label-font-size;
    font-weight: $newinput-label-font-weight;
    color: $newinput-label-color;
    margin-bottom: $newinput-label-margin-bottom;
  }
  &-inner-wrap {
    display: flex;
    flex-direction: column;
    position: relative;
    width: 100%;
    order: 1;
    flex-grow: 1;
    flex-basis: 0;
  }
  &-frame {
    position: absolute;
    width: 100%;
    height: 100%;
    bottom: 0;
    pointer-events: none;
  }
}
