@mixin modifiers-input-material-3($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-input-material-3($value, $separator);
      } @else {
        &.input-#{$inputMaterial3} {
          &.textarea {
            padding-top: $value/2 - floor(($input-material-font-size * $textarea-line-height)/2);
          }
          & ~ .input-label {
            top: ceil(($value - label2HeightCal($input-material-font-size))/2);
          }
          & ~ .select2-container--open {
            & ~ .input-label {
              z-index: 9;
              max-width: calc(#{$input-material-font-size/$input-material-font-size-sm * 100%} - #{$input-space-left});
              @include transform(scale($input-material-font-size-sm/$input-material-font-size) translateY(materialLabelCal2($value)));
            }
          }
          &.input-hadval,
          &.input-hadval-def {
            &.input-#{$inputMaterial3} {
              & ~ .input-label {
                z-index: 9;
                max-width: calc(#{$input-material-font-size/$input-material-font-size-sm * 100%} - #{$input-space-left});
                @include transform(scale($input-material-font-size-sm/$input-material-font-size) translateY(materialLabelCal2($value)));
              }
            }
          }
          &:focus,
          &.light-pick-focus {
            & ~ .input-label {
              z-index: 9;
              max-width: calc(#{$input-material-font-size/$input-material-font-size-sm * 100%} - #{$input-space-left});
              @include transform(scale($input-material-font-size-sm/$input-material-font-size) translateY(materialLabelCal2($value)));
            }
          }
        }
      }
    }
  }
}

@mixin modifiers-input-material-3-ic-left($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-input-material-3-ic-left($value, $separator);
      } @else {
        &.input-#{$inputMaterial3} {
          &.input-ic-left {
            & ~ .input-label {
              max-width: calc(100% - #{$input-space-left + $value});
              left: $value - $input-material-3-space-x;
            }
            & ~ .select2-container--open {
              & ~ .input-label {
                max-width: calc(#{$input-material-font-size/$input-material-font-size-sm * 100%} - #{$input-space-left + $value});
              }
            }
            &.input-hadval,
            &.input-hadval-def {
              &.input-#{$inputMaterial3} {
                & ~ .input-label {
                  max-width: calc(#{$input-material-font-size/$input-material-font-size-sm * 100%} - #{$input-space-left + $value});
                }
              }
            }
            &:focus,
            &.light-pick-focus {
              & ~ .input-label {
                max-width: calc(#{$input-material-font-size/$input-material-font-size-sm * 100%} - #{$input-space-left + $value});
              }
            }
          }
        }
      }
    }
  }
}

.input {
  &-#{$inputMaterial3} {
    border: 0;
    border: 0;
    background-color: $input-line-border-background;
    position: relative;
    font-size: $input-material-font-size;
    @include z-index(input-material);
    ~ .input-ic:after {
      background: linear-gradient(90deg, rgba(white, 0) 0%, rgba(white, 1) 30%);
    }
    & ~ .btn-group {
      [title="Ch·ªçn"],
      [title="Select"] {
        .multiselect-selected-text {
          opacity: 0;
        }
      }
    }
    &:disabled,
    & ~ .select2-container--default.select2-container--disabled .select2-selection--single,
    & ~ .select2-container--default.select2-container--disabled .select2-selection--multiple {
      background-color: transparent;
    }
    & ~ .select2-container--default .select2-selection--multiple {
      border: 1px solid $input-border-color;
    }
    & ~ .select2-container--default .select2-search--inline .select2-search__field {
      padding-left: 0;
    }
    & ~ .input-ic {
      text-align: center;
    }
    & ~ .select2-container--open,
    & ~ .btn-group.open {
      & ~ .input-label {
        font-weight: $input-material-font-weight-sm;
        color: $input-line-bar-color;
      }
    }
    &:focus,
    &.light-pick-focus,
    & ~ .btn-group.open {
      & ~ .input-label {
        font-weight: $input-material-font-weight-sm;
        color: $input-line-bar-color;
      }
    }
    & ~ .input-label {
      color: $input-placeholder-color;
      position: absolute;
      left: $input-space-left - $input-material-3-left;
      @include transition(0.3s cubic-bezier(0.25, 0.8, 0.5, 1));
      font-size: $input-material-font-size;
      @include transform-origin(top left);
      line-height: 1.2;
      pointer-events: none;
      padding: 0 $input-material-3-space-x;
      display: inline-block;
      z-index: 1;
      width: auto;
      background-color: white;
      white-space: nowrap;
      overflow: hidden;
      max-width: calc(100% - #{$input-space-left});
      text-overflow: ellipsis;
    }
  }
  &-size {
    @include modifiers-input-material-3($map-input-size);
  }
  &-ic {
    @include modifiers-input-material-3-ic-left($map-input-ic-size);
  }
}
