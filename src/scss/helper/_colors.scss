//gtc-scss

$color-transparent: transparent;
$color-black: #000;
$color-white: #fff;
$color-base: #121f3e;
$color-blue: #3f3bec;
$color-light-blue: #E5E5FF;
$color-red: #FF3D4E;
$color-light-red: #FFE6E8;
$color-orange: #FF7544;
$color-light-orange: #FFE3D9;
$color-green: #2ED573;
$color-light-green: #C2F2D6;
$color-purple: #4527a0;
$color-primary: #3f3bec;
$color-light-primary: #E5E5FF;
$color-danger: #3f3bec;
$color-light-danger: #E5E5FF;
$color-warning: #FF7544;
$color-light-warning: #FFE3D9;
$color-success: #2ED573;
$color-light-success: #C2F2D6;


$color-hover-transparent: #f5f5f5;
$color-hover-white: #f5f5f5;
$color-hover-blue: #3935D4;
$color-hover-light-blue: #D8D8FF;
$color-hover-red: #FFD9DA;
$color-hover-light-red: #D8D8FF;
$color-hover-orange: #F26F41;
$color-hover-light-orange: #FFD9CC;
$color-hover-green: #2CCC6E;
$color-hover-light-green: #B5F2CE;
$color-hover-primary: #3935D4;
$color-hover-light-primary: #D8D8FF;
$color-hover-danger: #3935D4;
$color-hover-light-danger: #D8D8FF;
$color-hover-warning: #F26F41;
$color-hover-light-warning: #FFD9CC;
$color-hover-success: #2CCC6E;
$color-hover-light-success: #B5F2CE;


$color-active-blue: #312FBA;
$color-active-light-blue: #CCCCFF;
$color-active-red: #CC313E;
$color-active-light-red: #FFCCD2;
$color-active-orange: #E6693D;
$color-active-light-orange: #FFD0BF;
$color-active-green: #29BD66;
$color-active-light-green: #AAF2C8;
$color-active-primary: #312FBA;
$color-active-light-primary: #CCCCFF;
$color-active-danger: #312FBA;
$color-active-light-danger: #CCCCFF;
$color-active-warning: #E6693D;
$color-active-light-warning: #FFD0BF;
$color-active-success: #29BD66;
$color-active-light-success: #AAF2C8;


$color-shadowOp-blue: 0.3;
$color-shadowOp-red: 0.3;
$color-shadowOp-orange: 0.3;
$color-shadowOp-green: 0.3;
$color-shadowOp-primary: 0.3;
$color-shadowOp-danger: 0.3;
$color-shadowOp-warning: 0.3;
$color-shadowOp-success: 0.3;


$map-color: (
	transparent: $color-transparent,
	black: #000,
	white: #fff,
	base: #121f3e,
	blue: #3f3bec,
	light-blue: #E5E5FF,
	red: #FF3D4E,
	light-red: #FFE6E8,
	orange: #FF7544,
	light-orange: #FFE3D9,
	green: #2ED573,
	light-green: #C2F2D6,
	purple: #4527a0,
	primary: #3f3bec,
	light-primary: #E5E5FF,
	danger: #3f3bec,
	light-danger: #E5E5FF,
	warning: #FF7544,
	light-warning: #FFE3D9,
	success: #2ED573,
	light-success: #C2F2D6,
);

$map-color-hover: (
	transparent: #f5f5f5,
	white: #f5f5f5,
	blue: #3935D4,
	light-blue: #D8D8FF,
	red: #FFD9DA,
	light-red: #D8D8FF,
	orange: #F26F41,
	light-orange: #FFD9CC,
	green: #2CCC6E,
	light-green: #B5F2CE,
	primary: #3935D4,
	light-primary: #D8D8FF,
	danger: #3935D4,
	light-danger: #D8D8FF,
	warning: #F26F41,
	light-warning: #FFD9CC,
	success: #2CCC6E,
	light-success: #B5F2CE,
);

$map-color-text: (
	transparent: $color-base,
	white: $color-base,
	light-blue: $color-blue,
	light-red: $color-red,
	light-orange: $color-orange,
	light-green: $color-green,
	light-primary: $color-blue,
	light-danger: $color-blue,
	light-warning: $color-orange,
	light-success: $color-green,
);

$map-color-active: (
	blue: #312FBA,
	light-blue: #CCCCFF,
	red: #CC313E,
	light-red: #FFCCD2,
	orange: #E6693D,
	light-orange: #FFD0BF,
	green: #29BD66,
	light-green: #AAF2C8,
	primary: #312FBA,
	light-primary: #CCCCFF,
	danger: #312FBA,
	light-danger: #CCCCFF,
	warning: #E6693D,
	light-warning: #FFD0BF,
	success: #29BD66,
	light-success: #AAF2C8,
);

$map-color-shadowOp: (
	blue: 0.3,
	red: 0.3,
	orange: 0.3,
	green: 0.3,
	primary: 0.3,
	danger: 0.3,
	warning: 0.3,
	success: 0.3,
);

//end-gtc-scss
$color-grey: #afb3bc !default;
$color-grey-1: #afb3bc !default;
$color-grey-2: #e0e4eb !default;
$color-grey-3: #eaeff3 !default;
$color-grey-4: #f7f8fa !default;
$color-base: #121f3e !default;
$color-base-2: #707c93 !default;
$color-white: #ffffff !default;
$color-red: #ff3d4e !default;
$color-blue: #3f3bec !default;
$color-orange: #ff7544 !default;
$color-yellow: #e9ec3b !default;
$color-teal: #0e5c22 !default;
$color-green: #2ed573 !default;
$color-purple: #4527a0 !default;

$color-primary: $color-blue !default;
$color-cancel: $color-grey-4 !default;
$color-secondary: $color-green !default;
$color-tertiary: $color-grey-3 !default;
$color-success: $color-green !default;
$color-false: $color-red !default;

$link-color: $color-blue !default;

$bg-line-border-thick: 1px;
$bg-op-opacity: 0.2;
$color-white: white;
$color-black: $color-base !default;

$border-base-color: $color-grey-2 !default;

$map-bg-op-color-modify: (
  yellow: $color-base,
  tertiary: $color-base,
  cancel: $color-base,
);

@mixin modifiers-bg-op-color($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-bg-op-color($value, $separator);
      } @else {
        background-color: rgba($color: $value, $alpha: $bg-op-opacity);
        &.bg-shadow {
          box-shadow: 0px 5px 30px 0 rgba($value, 0.3);
        }
        .legitRipple-ripple {
          background: lighten($value, 34%);
        }
        @if map-has-key($map-bg-op-color-modify, $key) {
          color: map-get($map-bg-op-color-modify, $key);
        } @else {
          color: $value;
        }
      }
    }
  }
}

@mixin modifiers-bg-color($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-bg-color($value, $separator);
      } @else {
        background-color: $value;
        .legitRipple-ripple,
        &.ubg-active:active {
          background-color: map-get($map: $map-color-active, $key: $value);
        }
        &.ubg-hover {
          transition: 0.2s all linear;
          &:hover {
            @if map-has-key($map-color-hover, $key) {
              background-color: map-get($map-color-hover, $key);
            }
          }
        }
        &.ubg-active {
          &:active {
            @if map-has-key($map-color-active, $key) {
              background-color: map-get($map-color-active, $key);
            }
          }
        }
        &.ubg-shadow {
          @if map-has-key($map-color-shadowOp, $key) {
            box-shadow: 0px 5px 30px 0 rgba($value, map-get($map: $map-color-shadowOp, $key: $key));
          } @else {
            box-shadow: 0px 5px 30px 0 rgba($value, 0.2);
          }
        }
        @if map-has-key($map-color-text, $key) {
          & .ubtn-inner {
            color: map-get($map-color-text, $key);
          }
          color: map-get($map-color-text, $key);
        } @else {
          & .ubtn-inner {
            color: white;
          }
          color: white;
        }
      }
    }
  }
}

@mixin modifiers-bg-line($map, $prefix: "-", $separator: "-", $base: "basic") {
  @each $key, $value in $map {
    &#{if($key != $base, #{$prefix}#{$key}, '')} {
      @if type-of($value) == "map" {
        @include modifiers-bg-line($value);
      } @else {
        border: $bg-line-border-thick solid $value !important;
        box-shadow: none;
        background: transparent;
        > * {
          color: $value;
        }
        .legitRipple-ripple {
          background: lighten($value, 42%);
        }
      }
    }
  }
}

.ripple .legitRipple-ripple,
.ripple-100 .legitRipple-ripple {
  background-color: $ripple-default-color;
}

.color {
  @include modifiers($map-color, "color");
  &-blank {
    color: transparent;
  }
}

.ubg {
  @include modifiers-bg-color($map-color);
  &-op {
    @include modifiers-bg-op-color($map-color);
  }
  &-blank {
    background: transparent;
  }
  &-line {
    @include modifiers-bg-line($map-color);
  }
}